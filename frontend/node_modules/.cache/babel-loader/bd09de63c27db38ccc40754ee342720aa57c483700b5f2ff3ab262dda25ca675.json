{"ast":null,"code":"var _jsxFileName = \"/Users/dimooon/WebstormProjects/untitled_proj/NeRw/frontend/src/components/forms/AuthForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport './AuthForm.css';\nimport { doctorLogin, patientLogin } from \"../../api/api\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Context } from \"../../index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthForm = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    UserStore\n  } = useContext(Context);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  // const [errorMessage, setErrorMessage] = useState('');\n  const [doctorState, setDoctorState] = useState(false);\n  const [patientState, setPatientState] = useState(false);\n  const PatientDTO = {\n    hashedPassword: password,\n    email: username\n  };\n  const doctorDTO = {\n    // name: firstname,\n    // lastname: lastname,\n    hashedPassword: password,\n    email: username\n  };\n  const handleSubmit = async () => {\n    console.log(\"I am handleSubmit\");\n    if (doctorState) {\n      try {\n        console.log(doctorDTO);\n        const status = await doctorLogin(doctorDTO);\n        console.log(\"DOC: \" + status);\n        if (status === 200) {\n          navigate('/home');\n          UserStore.setDoc(true);\n        } else if (status === 401) {\n          alert('Im not the one who is wrong... What is wrong is the world.');\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    } else if (patientState) {\n      try {\n        const status = await patientLogin(PatientDTO);\n        console.log(\"PAT: \" + status);\n        if (status === 200) {\n          navigate('/home');\n          UserStore.setUser(true);\n        } else if (status === 401) {\n          alert('Those who do not understand true pain can never understand true peace.');\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    } else {\n      console.log(\"Congratulations!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      id: \"SignInHandler\",\n      children: \"Sign In \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        id: \"user\",\n        name: \"role\",\n        value: \"user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        id: \"SignUpHandler\",\n        htmlFor: \"user\",\n        children: \"Patient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        id: \"doctor\",\n        name: \"role\",\n        value: \"doctor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        id: \"SignUpHandler\",\n        htmlFor: \"doctor\",\n        children: \"Doctor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"SignUpHandler\",\n          children: [\"Don't have an account?\", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/register\",\n            children: \" Create one!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 65\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthForm, \"1YG7idkADxRi0/8K/NV61RXw0pc=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthForm;\nexport default AuthForm;\nvar _c;\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["React","useState","useContext","doctorLogin","patientLogin","useNavigate","Context","jsxDEV","_jsxDEV","AuthForm","_s","navigate","UserStore","username","setUsername","password","setPassword","errorMessage","setErrorMessage","doctorState","setDoctorState","patientState","setPatientState","PatientDTO","hashedPassword","email","doctorDTO","handleSubmit","console","log","status","setDoc","alert","error","setUser","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","name","placeholder","value","onChange","e","target","required","htmlFor","href","_c","$RefreshReg$"],"sources":["/Users/dimooon/WebstormProjects/untitled_proj/NeRw/frontend/src/components/forms/AuthForm.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport './AuthForm.css';\nimport {doctorLogin, patientLogin} from \"../../api/api\";\nimport {useNavigate} from \"react-router-dom\";\nimport {Context} from \"../../index\";\n\nconst AuthForm = () => {\n    const navigate = useNavigate();\n\n    const {UserStore} = useContext(Context);\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n\n    // const [errorMessage, setErrorMessage] = useState('');\n    const [doctorState, setDoctorState] = useState(false);\n    const [patientState, setPatientState] = useState(false);\n\n    const PatientDTO = {\n        hashedPassword: password,\n        email: username\n    }\n    const doctorDTO = {\n        // name: firstname,\n        // lastname: lastname,\n        hashedPassword: password,\n        email: username\n    }\n\n    const handleSubmit = async () => {\n        console.log(\"I am handleSubmit\");\n        if (doctorState){\n            try {\n                console.log(doctorDTO);\n                const status = await doctorLogin(doctorDTO);\n                console.log(\"DOC: \" + status);\n                if (status === 200){\n                    navigate('/home');\n                    UserStore.setDoc(true);\n                } else if (status === 401){\n                    alert('Im not the one who is wrong... What is wrong is the world.');\n                }\n            } catch (error) {\n                console.error(error);\n            }\n        } else if (patientState){\n            try {\n                const status = await patientLogin(PatientDTO);\n                console.log(\"PAT: \" + status);\n                if(status === 200){\n                    navigate('/home');\n                    UserStore.setUser(true);\n                } else if(status === 401){\n                    alert('Those who do not understand true pain can never understand true peace.');\n                }\n            } catch (error) {\n                console.error(error);\n            }\n        } else {\n            console.log(\"Congratulations!\");\n        }\n    };\n\n    return (\n        <div className=\"login-form\">\n            <h3 id=\"SignInHandler\">Sign In </h3>\n            <form onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    name=\"username\"\n                    placeholder=\"Username\"\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                    required\n                />\n                <input\n                    type=\"password\"\n                    name=\"password\"\n                    placeholder=\"Password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    required\n                />\n                <input  type=\"radio\" id=\"user\" name=\"role\" value=\"user\"/>\n                <label id=\"SignUpHandler\" htmlFor=\"user\">Patient</label>\n                <input type=\"radio\" id=\"doctor\" name=\"role\" value=\"doctor\"/>\n                <label id=\"SignUpHandler\" htmlFor=\"doctor\">Doctor</label>\n                <div>\n                    <p id=\"SignUpHandler\">Don't have an account?<a href=\"/register\"> Create one!</a></p>\n                </div>\n                <input type=\"submit\" value=\"Login\" />\n            </form>\n            {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n        </div>\n    );\n};\n\nexport default AuthForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}