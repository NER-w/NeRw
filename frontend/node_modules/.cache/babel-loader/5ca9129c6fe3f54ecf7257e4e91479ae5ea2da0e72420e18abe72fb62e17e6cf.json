{"ast":null,"code":"const api = require('./index');\n/// patient requests\n\n//\nexport async function patientRegistration(patientDTO) {\n  try {\n    return await api.post('/patient-registration', patientDTO);\n  } catch (e) {\n    console.error(e);\n  }\n}\nexport async function patientLogin(patientDTO) {\n  try {\n    return await api.post('/sign-up-patient', patientDTO);\n  } catch (e) {\n    console.error(e);\n  }\n}\nexport async function doctorLogin(doctorDTO) {\n  try {\n    return await api.post('/login-doctor', doctorDTO);\n  } catch (e) {\n    console.error(e);\n  }\n}\nexport async function doctorRegister() {\n  try {\n    return await api.post('/sign-up-doctor', {\n      name: \"oskar\",\n      lastname: \"sada\",\n      password: \"mamaka\",\n      email: \"test@\"\n    });\n  } catch (e) {\n    console.error(e);\n  }\n}","map":{"version":3,"names":["api","require","patientRegistration","patientDTO","post","e","console","error","patientLogin","doctorLogin","doctorDTO","doctorRegister","name","lastname","password","email"],"sources":["/Users/dimooon/WebstormProjects/untitled_proj/NeRw/frontend/src/api/api.js"],"sourcesContent":["const api = require('./index')\n/// patient requests\n\n//\nexport async function patientRegistration(patientDTO) {\n    try {\n        return await api.post('/patient-registration', patientDTO);\n    } catch (e) {\n        console.error(e);\n    }\n}\n\nexport async function patientLogin(patientDTO) {\n    try {\n        return await api.post('/sign-up-patient', patientDTO);\n    } catch (e) {\n        console.error(e);\n    }\n}\n\nexport async function doctorLogin(doctorDTO) {\n    try {\n        return await api.post('/login-doctor', doctorDTO);\n    } catch (e) {\n        console.error(e);\n    }\n}\n\nexport async function doctorRegister() {\n    try {\n        return await api.post('/sign-up-doctor', {\n            name: \"oskar\",\n            lastname: \"sada\",\n            password: \"mamaka\",\n            email: \"test@\"\n        });\n    } catch (e) {\n        console.error(e);\n    }\n}"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,SAAS,CAAC;AAC9B;;AAEA;AACA,OAAO,eAAeC,mBAAmBA,CAACC,UAAU,EAAE;EAClD,IAAI;IACA,OAAO,MAAMH,GAAG,CAACI,IAAI,CAAC,uBAAuB,EAAED,UAAU,CAAC;EAC9D,CAAC,CAAC,OAAOE,CAAC,EAAE;IACRC,OAAO,CAACC,KAAK,CAACF,CAAC,CAAC;EACpB;AACJ;AAEA,OAAO,eAAeG,YAAYA,CAACL,UAAU,EAAE;EAC3C,IAAI;IACA,OAAO,MAAMH,GAAG,CAACI,IAAI,CAAC,kBAAkB,EAAED,UAAU,CAAC;EACzD,CAAC,CAAC,OAAOE,CAAC,EAAE;IACRC,OAAO,CAACC,KAAK,CAACF,CAAC,CAAC;EACpB;AACJ;AAEA,OAAO,eAAeI,WAAWA,CAACC,SAAS,EAAE;EACzC,IAAI;IACA,OAAO,MAAMV,GAAG,CAACI,IAAI,CAAC,eAAe,EAAEM,SAAS,CAAC;EACrD,CAAC,CAAC,OAAOL,CAAC,EAAE;IACRC,OAAO,CAACC,KAAK,CAACF,CAAC,CAAC;EACpB;AACJ;AAEA,OAAO,eAAeM,cAAcA,CAAA,EAAG;EACnC,IAAI;IACA,OAAO,MAAMX,GAAG,CAACI,IAAI,CAAC,iBAAiB,EAAE;MACrCQ,IAAI,EAAE,OAAO;MACbC,QAAQ,EAAE,MAAM;MAChBC,QAAQ,EAAE,QAAQ;MAClBC,KAAK,EAAE;IACX,CAAC,CAAC;EACN,CAAC,CAAC,OAAOV,CAAC,EAAE;IACRC,OAAO,CAACC,KAAK,CAACF,CAAC,CAAC;EACpB;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}